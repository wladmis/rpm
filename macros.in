#/*! \page config_macros Default configuration: @RPMCONFIGDIR@/macros
# \verbatim
#
# This is a global RPM configuration file. All changes made here will
# be lost when the rpm package is upgraded. Any per-system configuration
# should be added to /etc/rpm/macros, while per-user configuration should
# be added to ~/.rpmmacros.
#
#==============================================================================
# Macro naming conventions (preliminary):
#
#	Macros that begin with an underscore are "local" in the sense that
#	they (if used) will not be exported in rpm headers. Some macros
#	that don't start with an underscore (but look like they should)
#	are compatible with macros generated by rpm-2.5.x and will be made
#	more consistent in a future release.
#

#==============================================================================
# ---- A macro that expands to nothing.
#
%nil			%{!?nil}

#==============================================================================
# ---- filesystem macros.
#
%_usr			@prefix@
%_usrsrc		%{_usr}/src
%_var			/var

#==============================================================================
# ---- Generally useful path macros.
#
%__awk			@AWK@
%__cat			@__CAT@
%__chgrp		@__CHGRP@
%__chmod		@__CHMOD@
%__chown		@__CHOWN@
%__cp			@__CP@
%__file			@__FILE@
%__gpg			@__GPG@
%__grep			@__GREP@
%__id			@__ID@
%__install		@__INSTALL@
%__install_info		@__INSTALL_INFO@
%__ln_s			@LN_S@
%__make			@__MAKE@
%__mkdir		@__MKDIR@
%__mkdir_p		@MKDIR_P@
%__mv			@__MV@
%__patch		@__PATCH@
%__perl			@__PERL@
%__pgp			@PGPBIN@
%__python		@__PYTHON@
%__rm			@__RM@
%__rsh			@__RSH@
%__sed			@__SED@
%__ssh			@__SSH@
%__subst		@__SUBST@

#==============================================================================
# ---- Archiving and compression programs.
#
#
%__tar			@__TAR@
%__cpio			@__CPIO@
%__gzip			@__GZIP@
%__bzip2		@__BZIP2@
%__unzip		@__UNZIP@
%__lzma			@__LZMA@
%__xz			@__XZ@

#==============================================================================
# ---- Build system path macros.
#
%__ar			ar
%__as			as
%__cc			gcc
%__cpp			gcc -E
%__cxx			g++
%__ld			@__LD@
%__nm			@__NM@
%__objcopy		@__OBJCOPY@
%__objdump		@__OBJDUMP@
%__ranlib		@RANLIB@
%__remsh		%{__rsh}
%__strip		@__STRIP@

# XXX avoid failures if tools are not installed when rpm is built.
%__libtoolize		libtoolize
%__aclocal		aclocal
%__autoheader		autoheader
%__automake		automake
%__autoconf		autoconf

#==============================================================================
# ---- Required rpmrc macros.
#	Macros that used to be initialized as a side effect of rpmrc parsing.
#	These are the default values that can be overridden by other
#	(e.g. per-platform, per-system, per-packager, per-package) macros.
#
#	The directory where rpm's configuration and scripts live
%_rpmconfigdir		%{getconfdir}

#	The directory where sources/patches will be unpacked and built.
%_builddir		%{_topdir}/BUILD

#	The interpreter used for build scriptlets.
%_buildshell		/bin/sh

#	The location of the rpm database file(s).
%_dbpath		%{_var}/lib/rpm

#	The location of the rpm database file(s) after "rpm --rebuilddb".
%_dbpath_rebuild	%{_dbpath}

%_defaultdocdir		%{_datadir}/doc

#
# Use internal dependency generator rather than external helpers?
%_use_internal_dependency_generator	1

#
%__find_provides	%{_rpmconfigdir}/find-provides
%__find_requires	%__find_requires     %{_rpmconfigdir}/find-requires
#%__find_prereq		???
#%__find_conflicts	???
#%__find_obsoletes	???

%__debug_install_post   \
   %{_rpmconfigdir}/find-debuginfo.sh %{?_missing_build_ids_terminate_build:--strict-build-id} %{?_include_minidebuginfo:-m} %{?_find_debuginfo_dwz_opts} %{?_find_debuginfo_opts} "%{_builddir}/%{?buildsubdir}"\
%{nil}

# 
# Path to file attribute classifications for automatic dependency 
# extraction, used when _use_internal_dependency_generator
# is used (on by default). Files can have any number of attributes
# attached to them, and dependencies are separately extracted for
# each attribute.
# 
# To define a new file attribute called "myattr", add a file named
# "myattr" to this directory, defining the requires and/or provides
# finder script(s) + magic and/or path pattern regex(es).
# provides finder and 
# %__myattr_requires	path + args to requires finder script for <myattr>
# %__myattr_provides	path + args to provides finder script for <myattr>
# %__myattr_magic	libmagic classification match regex
# %__myattr_path	path based classification match regex
# %__myattr_flags	flags to control behavior (just "exeonly" for now)
# %__myattr_exclude_magic	exclude by magic regex
# %__myattr_exclude_path	exclude by path regex
#
%_fileattrsdir		%{_rpmconfigdir}/fileattrs

#
# fixowner, fixgroup, and fixperms are run at the end of hardcoded setup
# These macros are necessary only for legacy compatibility, and have moved
# to per-platform macro configuration (i.e. /usr/lib/rpm/<arch>-<os>/macros)
#%__id_u		@__ID_U@
#%__chown_Rhf		@__CHOWN_RHF@
#%__chgrp_Rhf		@__CHGRP_RHF@
#%_fixowner		[ `%{__id_u}` = '0' ] && %{__chown_Rhf} root
#%_fixgroup		[ `%{__id_u}` = '0' ] && %{__chgrp_Rhf} @ROOT_GROUP@
#%_fixperms		%{__chmod} -Rf @FIXPERMS@
#

#	The number of changelog entries kept when installing (legacy, unused in
#	rpm-4.0.1 and later).
%_instchangelog		5

#	The path to the pgp executable (legacy, use %{__pgp} instead).
%_pgpbin		%{__pgp}

#	The directory where newly built binary packages will be written.
%_rpmdir		%{_topdir}/RPMS

#	A template used to generate the output binary package file name
#	(legacy).
%_rpmfilename		%{_build_name_fmt}

#	The default signature type.
%_signature		gpg

#	The directory where sources/patches from a source package will be
#	installed. This is also where sources/patches are found when building.
%_sourcedir		%{_topsrcdir}/SOURCES

#	The directory where the spec file from a source package will be
#	installed.
%_specdir		%{_topsrcdir}/SPECS

#	The directory where newly built source packages will be written.
%_srcrpmdir		%{_topdir}/SRPMS

#	Directory where temporaray files can be created.
%_tmppath		%{_tmpdir}

#	Path to top of build area.
%_topdir		%{_usrsrc}/RPM

#	Path to top of spec/source/patch area.
%_topsrcdir		%{_topdir}

#==============================================================================
# ---- Optional rpmrc macros.
#	Macros that are initialized as a side effect of rpmrc and/or spec
#	file parsing.
#
#      The directory where buildroots will be created.
%_buildrootdir         %{_tmppath}

#
#	Configurable build root path, same as BuildRoot: in a specfile.
#	(Note: the configured macro value will override the spec file value).
#
%buildroot		%{_tmppath}/%{name}-buildroot

#	The sub-directory (relative to %{_builddir}) where sources are compiled.
#	This macro is set after processing %setup, either explicitly from the
#	value given to -n or the default name-version.
#
#%buildsubdir

#	Configurable distribution information, same as Distribution: tag in a
#	specfile.
#
#%distribution

#	Configurable distribution URL, same as DistURL: tag in a specfile.
#	The URL will be used to supply reliable information to tools like
#	rpmfind.
#
# Note: You should not configure with disturl (or build packages with
# the DistURL: tag) unless you are willing to supply content in a
# yet-to-be-determined format at the URL specified.
#
#%disturl

#	Boolean (i.e. 1 == "yes", 0 == "no") that controls whether files
#	marked as %doc should be installed.
#%_excludedocs

#	The port and machine name of a FTP proxy host running TIS firewall.
#
#%_ftpport
#%_ftpproxy

#	The signature to use and the location of configuration files for
#	signing packages with GNU gpg.
#
#%_gpg_name
#%_gpg_path

#	The port and machine name of an HTTP proxy host.
#
#%_httpport
#%_httpproxy

#	The PATH put into the environment before running %pre/%post et al.
#
%_install_script_path	/sbin:/bin:/usr/sbin:/usr/bin:/usr/X11R6/bin

#	A colon separated list of desired locales to be installed;
#	"all" means install all locale specific files.
#	
%_install_langs	all

#	A colon separated list of paths where files should *not* be installed.
#	Usually, these are network file system mount points.
#
#%_netsharedpath

#	(experimental)
#	The type of pattern match used on rpmdb iterator selectors:
#	"default"	simple glob-like regex, periods will be escaped,
#			splats will have period prepended, full "^...$" match
#			required. Also, file path tags will use glob(7).
#	"strcmp"	compare strings
#	"regex"		regex(7) patterns using regcomp(3)/regexec(3)
#	"glob"		glob(7) patterns using fnmatch(3)
#
%_query_selector_match	default

#	Configurable packager information, same as Packager: in a specfile.
#
#%packager

#	Compression type and level for source/binary package payloads.
#		"w9.gzdio"	gzip level 9 (default).
#		"w9.bzdio"	bzip2 level 9.
#
#%_source_payload	w9.gzdio
#%_binary_payload	w9.gzdio
%_source_payload	w2.lzdio
%_binary_payload	w2.lzdio

#	The signature to use and the location of configuration files for
#	signing packages with PGP.
#
#%_pgp_name
#%_pgp_path

#	Configurable virtual provides (unimplemented, use Provides: ...
#	in an rpmrc file).
#
#%_provides

#	Deprecated.
#
#%_timecheck

#	Configurable vendor information, same as Vendor: in a specfile.
#
#%vendor

#	Default fuzz level for %patch in spec file.
#%_default_patch_fuzz	-1

#	Default patch flags
%_default_patch_flags --no-backup-if-mismatch

# Should unpackaged files in a buildroot terminate a build?
#
# Note: The default value should be 0 for legacy compatibility.
%_unpackaged_files_terminate_build	0

# Desired selinux policy tree
%__policy_tree %(sed -rn 's;^[[:blank:]]*SELINUXTYPE=([^[:blank:]]+).*$;\\1;p' %{_sysconfdir}/selinux/config)

# Path to selinux file context patterns.
%__file_context_path /etc/selinux/%{__policy_tree}/contexts/files/file_contexts

#
# Path to selinux file context patterns used to set
# (or override package content) file contexts when installing.
#
# Undefined, missing or %{nil} will use package content (if available).
%_install_file_context_path     %{__file_context_path}


#==============================================================================
# ---- Package version macro.
#	The type of package to produce, for compatibility with legacy
#	versions of rpm.
#
# This is an rpm version, e.g. 30005 means to produce packaging compatible
# with rpm-3.0.5. At the moment, values < 30005 (i.e. compatibility with
# version before rpm-3.0.5) are not supported. The only incompatible change
# in rpm packaging since rpm-3.0.5 has been to replace a 3 with a 4 in the
# rpmlead, so there's little need to use any value greater than 30005.
#
%_package_version	30005

#==============================================================================
# ---- Database configuration macros.
#	Macros used to configure Berkley db parameters.
#
# rpmdb macro configuration values are a colon (or white space) separated
# list of tokens, with an optional '!' negation to explicitly disable bit
# values, or a "=value" if a parameter. A per-tag value is used (e.g.
# %_dbi_config_Packages) if defined, otherwise a per-rpmdb default
# (e.g. %_dbi_config). The configuration is also conditioned on the
# existence of an internal %{_rpmdb_rebuild} switch to permit changing
# the configuration while rebuilding an rpmdb database.
#
# The rpmdb configuration tokens are in a popt table in rpmdb/dbconfig.c,
# see that for the latest gory details. Note carefully that, unless you
# are writing an rpm installer, you shouldn't have to touch *any* of these
# parameters.
#
# Here's a short list of the tokens, with a guess of whether the option is
# useful:
#	(nothing)	currently used in rpm, known to work.
#	"+++"		under development, will be supported in rpm eventually.
#	"???"		I have no clue, you're mostly on your own.
#
# If you do find yourself inclined to fiddle, here's what I see (shrug):
# 1) Only the value of mp_size has any serious impact on overall performance,
#    and you will need ~256Kb to handle a typical machine install.
# 2) Only the Packages hash, because of the size of the values (i.e. headers),
#    will ever need tuning. Diddle the pagesize if you're interested, although
#    I believe that you will find pagesize=512 "best".
# 3) Adding nofsync increases speed, but risks total data loss. Fiddle shared
#    and/or mp_size instead.
#
#   token	works?	Berkeley db flag or value
#==================================================
#---------------------- DBENV tunable values:
#   mmapsize=16Mb	DBENV->set_mp_mmapsize
#   cachesize=1Mb	DBENV->set_cachesize, DB->set_cachesize
#---------------------- DB->open bits:
#   nommap	???	DB_NOMMAP
#----------------------- rpmdb specific configuration:
#   lockdbfd		(always on for Packages) Use fcntl(2) locking ?
#   nofsync		Disable fsync(2) call performed after db3 writes?
#

# Legacy DB api macro
%_dbapi				3

# Misc BDB tuning options
%__dbi_other			mp_mmapsize=128Mb mp_size=1Mb

%_dbi_config			%{?__dbi_other}

# "Packages" should have shared/exclusive fcntl(2) lock using "lockdbfd".
%_dbi_config_Packages		%{?_dbi_config} lockdbfd

#==============================================================================
# ---- GPG/PGP/PGP5 signature macros.
#	Macro(s) to hold the arguments passed to GPG/PGP for package
#	signing and verification.
#

%__gpg_sign_cmd			%{__gpg} \
	gpg --no-verbose --no-armor \
	%{?_gpg_digest_algo:--digest-algo %{_gpg_digest_algo}} \
	--no-secmem-warning \
	-u "%{_gpg_name}" -sbo %{__signature_filename} %{__plaintext_filename}

# XXX rpm >= 4.1 verifies signatures internally
#%__gpg_verify_cmd		%{__gpg} \
#	gpg --batch --no-verbose --verify --no-secmem-warning \
#	%{__signature_filename} %{__plaintext_filename}
#
# XXX rpm-4.1 verifies prelinked libraries using a prelink undo helper.
#	Normally this macro is defined in /etc/rpm/macros.prelink, installed
#	with the prelink package. If the macro is undefined, then prelinked
#	shared libraries contents are MD5 digest verified (as usual), rather
#	than MD5 verifying the output of the prelink undo helper.
#
#	Note: The 2nd token is used as argv[0] and "library" is a
#	placeholder that will be deleted and replaced with the appropriate
#	library file path.
#%__prelink_undo_cmd     /usr/sbin/prelink prelink -y library

# Horowitz Key Protocol server configuration
#
%_hkp_keyserver         http://pgp.mit.edu
%_hkp_keyserver_query   %{_hkp_keyserver}:11371/pks/lookup?op=get&search=0x

#==============================================================================
# ---- Transaction macros.
#	Macro(s) used to parameterize transactions.
#
#	The output binary package file name template used when building
#	binary packages.
#
# XXX	Note: escaped %% for use in headerSprintf()
%_build_name_fmt	%%{ARCH}/%%{NAME}-%%{VERSION}-%%{RELEASE}.%%{ARCH}.rpm

#	Verify digest/signature flags for various rpm modes:
#	0x30300 (_RPMVSF_NODIGESTS)    --nohdrchk      if set, don't check digest(s)
#	0xc0c00 (_RPMVSF_NOSIGNATURES) --nosignature   if set, don't check signature(s)
#	0xf0000 (_RPMVSF_NOPAYLOAD)    --nolegacy      if set, check header+payload (if possible)
#	0x00f00 (_RPMVSF_NOHEADER)     --nohdrchk      if set, don't check rpmdb headers
#
#	For example, the value 0xf0c00 (=0xf0000+0xc0c00) disables legacy
#	digest/signature checking, disables signature checking, but attempts
#	digest checking, also when retrieving headers from the database.
#
#	You also can do:
#	 >>> hex(rpm._RPMVSF_NOSIGNATURES)
#	 '0xc0c00'
#	or:
#	 >>> hex(rpm._RPMVSF_NOSIGNATURES|rpm._RPMVSF_NOPAYLOAD)
#	 '0xf0c00'
#	at the python prompt for example, after "import rpm".
#
#	The checking overhead is ~11ms per header for digests/signatures;
#	each header from the database is checked only when first encountered
#	for each database open.
#
#	Note: the %_vsflags_erase applies to --upgrade/--freshen modes as
#	well as --erase.
#
%__vsflags		0xf0000
%_vsflags_build		%{__vsflags}
%_vsflags_erase		%{__vsflags}
%_vsflags_install	%{__vsflags}
%_vsflags_query		%{__vsflags}
%_vsflags_rebuilddb	0xc0c00
%_vsflags_verify	%{__vsflags}

#
# Default output format string for rpm -qa
#
# XXX	Note: escaped %% for use in headerFormat()
%_query_all_fmt		%%{nvra}

#
# Default path to the file used for transaction fcntl lock.
%_rpmlock_path	%{_dbpath}/.rpm.lock

#==============================================================================
# ---- per-platform macros.
#	Macros that are specific to an individual platform. The values here
#	will be used if the per-platform macro file does not exist..
#
%_arch			@RPMCANONARCH@
%_build_arch		@RPMCANONARCH@
%_vendor		@RPMCANONVENDOR@
%_os			@RPMCANONOS@
%_gnu			-gnu

#
# Define a generic value for optflags. Normally overridden by per-target macros.
%optflags		-O2

#
# Define per-arch and per-os defaults. Normally overridden by per-target macros.
%__arch_install_post	%{nil}
%__os_install_post	%{___build_post}

#==============================================================================
# ---- Scriptlet template templates.
#	Global defaults used for building scriptlet templates.
#

%___build_shell		%{?_buildshell:%{_buildshell}}%{!?_buildshell:/bin/sh}
%___build_args		-e
%___build_cmd		%{?_sudo:%{_sudo} }%{?_remsh:%{_remsh} %{_remhost} }%{?_remsudo:%{_remsudo} }%{?_remchroot:%{_remchroot} %{_remroot} }%{___build_shell} %{___build_args}
%___build_pre	\
%{warn:Invalid or unknown architecture: %{_target_cpu}-%{_vendor}-%{_target_os}\
}exit 1\
%nil

#%___build_body		%{nil}
%___build_post		exit 0

%___build_template	#!%{___build_shell}\
%{___build_pre}\
%{nil}

#%{___build_body}\
#%{___build_post}\
#%{nil}

%__spec_prep_custom_pre		%{nil}
%__spec_prep_custom_post	%{nil}
%__spec_build_custom_pre	%{nil}
%__spec_build_custom_post	%{nil}
%__spec_install_custom_pre	%{nil}
%__spec_install_custom_post	%{nil}
%__spec_check_custom_pre	%{nil}
%__spec_check_custom_post	%{nil}
%__spec_autodep_custom_pre	%{nil}
%__spec_autodep_custom_post	%{nil}
%__spec_clean_custom_pre	%{nil}
%__spec_clean_custom_post	%{nil}
%__spec_rmbuild_custom_pre	%{nil}
%__spec_rmbuild_custom_post	%{nil}

#==============================================================================
# ---- Scriptlet templates.
#	Macro(s) that expand to a command and script that is executed.
#	CAVEAT: All macro expansions must fit in a BUFSIZ (8192 byte) buffer.
#
%__spec_prep_shell	%{___build_shell}
%__spec_prep_args	%{___build_args}
%__spec_prep_cmd	%{___build_cmd}
%__spec_prep_pre\
%{___build_pre}\
%{__spec_prep_custom_pre}\
%{nil}
%__spec_prep_body	%{___build_body}
%__spec_prep_post\
%{___build_post}\
%{__spec_prep_custom_post}\
%{nil}
%__spec_prep_template	#!%{__spec_prep_shell}\
%{__spec_prep_pre}\
%{nil}

#%{__spec_prep_body}\
#%{__spec_prep_post}\
#%{nil}

%__spec_build_shell	%{___build_shell}
%__spec_build_args	%{___build_args}
%__spec_build_cmd	%{___build_cmd}
%__spec_build_pre\
%{___build_pre}\
%{__spec_build_custom_pre}\
%{nil}
%__spec_build_body	%{___build_body}
%__spec_build_post\
%{___build_post}\
%{__spec_build_custom_post}\
%{nil}
%__spec_build_template	#!%{__spec_build_shell}\
%{__spec_build_pre}\
%{nil}

#%{__spec_build_body}\
#%{__spec_build_post}\
#%{nil}

%__spec_install_shell	%{___build_shell}
%__spec_install_args	%{___build_args}
%__spec_install_cmd	%{___build_cmd}
%__spec_install_pre\
%{___build_pre}\
%{__spec_install_custom_pre}\
%{nil}
%__spec_install_body	%{___build_body}
%__spec_install_post\
%{__arch_install_post}\
%{__os_install_post}\
%{__spec_install_custom_post}\
%{nil}
%__spec_install_template	#!%{__spec_install_shell}\
%{__spec_install_pre}\
%{nil}

#%{__spec_install_body}\
#%{__spec_install_post}\
#%{nil}

%__spec_check_shell	%{___build_shell}
%__spec_check_args	%{___build_args}
%__spec_check_cmd	%{___build_cmd}
%__spec_check_pre\
%{___build_pre}\
%{__spec_check_custom_pre}\
%{nil}
%__spec_check_body	%{___build_body}
%__spec_check_post\
%{___build_post}\
%{__spec_check_custom_post}\
%{nil}
%__spec_check_template	#!%{__spec_check_shell}\
%{__spec_check_pre}\
%{nil}

#%{__spec_check_body}\
#%{__spec_check_post}\
#%{nil}

%__spec_autodep_shell	%{___build_shell}
%__spec_autodep_args	%{___build_args}
%__spec_autodep_cmd	%{___build_cmd}
%__spec_autodep_pre\
%{___build_pre}\
%{__spec_autodep_custom_pre}\
%{nil}
%__spec_autodep_body	%{___build_body}
%__spec_autodep_post\
%{___build_post}\
%{__spec_autodep_custom_post}\
%{nil}
%__spec_autodep_template	#!%{__spec_autodep_shell}\
%{__spec_autodep_pre}\
%{nil}

#%{__spec_autodep_body}\
#%{__spec_autodep_post}\
#%{nil}

%__spec_clean_shell	%{___build_shell}
%__spec_clean_args	%{___build_args}
%__spec_clean_cmd	%{___build_cmd}
%__spec_clean_pre\
%{___build_pre}\
%{__spec_clean_custom_pre}\
%{nil}
%__spec_clean_body	%{___build_body}
%__spec_clean_post\
%{___build_post}\
%{__spec_clean_custom_post}\
%{nil}
%__spec_clean_template	#!%{__spec_clean_shell}\
%{__spec_clean_pre}\
%{nil}

#%{__spec_clean_body}\
#%{__spec_clean_post}\
#%{nil}

%__spec_rmbuild_shell	%{___build_shell}
%__spec_rmbuild_args	%{___build_args}
%__spec_rmbuild_cmd	%{___build_cmd}
%__spec_rmbuild_pre\
%{___build_pre}\
%{__spec_rmbuild_custom_pre}\
%{nil}
%__spec_rmbuild_body	%{___build_body}
%__spec_rmbuild_post\
%{___build_post}\
%{__spec_rmbuild_custom_post}\
%{nil}
%__spec_rmbuild_template	#!%{__spec_rmbuild_shell}\
%{__spec_rmbuild_pre}\
%{nil}

#%{__spec_rmbuild_body}\
#%{__spec_rmbuild_post}\
#%{nil}

# XXX We don't expand pre/post install scriptlets (yet).
#%__spec_pre_pre		%{nil}
#%__spec_pre_post		%{nil}
#%__spec_post_pre		%{nil}
#%__spec_post_post		%{nil}
#%__spec_preun_pre		%{nil}
#%__spec_preun_post		%{nil}
#%__spec_postun_pre		%{nil}
#%__spec_postun_post		%{nil}
#%__spec_triggerpostun_pre	%{nil}
#%__spec_triggerpostun_post	%{nil}
#%__spec_triggerun_pre		%{nil}
#%__spec_triggerun_post		%{nil}
#%__spec_triggerin_pre		%{nil}
#%__spec_triggerin_post		%{nil}

#==============================================================================
# ---- configure macros.
#	Macro(s) slavishly copied from autoconf's config.status.
#
%_prefix		@prefix@
%_exec_prefix		%{_prefix}
%_bindir		%{_exec_prefix}/bin
%_sbindir		%{_exec_prefix}/sbin
%_libexecdir		%{_exec_prefix}/lib
%_datadir		%{_prefix}/share
%_sysconfdir		/etc
%_sharedstatedir	%{_var}/lib
%_localstatedir		%{_var}/lib
%_lib			lib
%_libdir		%{_exec_prefix}/%{_lib}
%_includedir		%{_prefix}/include
%_oldincludedir		/usr/include
%_infodir		%{_datadir}/info
%_mandir		%{_datadir}/man

#==============================================================================
# ---- config.guess platform macros.
#	Macro(s) similar to the tokens used by configure.
#
%_build			%{_host}
%_build_alias		%{_host_alias}
%_build_cpu		%{_host_cpu}
%_build_vendor		%{_host_vendor}
%_build_os		%{_host_os}
%_host			@host@
%_host_alias		@host_alias@%{nil}
%_host_cpu		@host_cpu@
%_host_vendor		@host_vendor@
%_host_os		@host_os@
%_target		%{_host}
%_target_alias		%{_host_alias}
%_target_cpu		%{_host_cpu}
%_target_vendor		%{_host_vendor}
%_target_os		%{_host_os}

#------------------------------------------------------------------------------
# arch macro for all Intel i?86 compatibile processors
#  (Note: This macro (and it's analogues) will probably be obsoleted when
#   rpm can use regular expressions against target platforms in macro
#   conditionals.
#
%intel	i386 i486 i586 i686 i786 i886 i986 pentium2 pentium3 pentium4
%amd	k6 athlon athlon_xp
%ix86	%intel %amd

#------------------------------------------------------------------------------
# arch macro for all ARM processors
#
%arm	arm armv3l armv4l armv5l armv5tel armv5tejl armv6l armv7l armh

#------------------------------------------------------------------------
# Use in %install to generate locale specific file lists. For example,
#
# %install
# ...
# %find_lang %{name}
# ...
# %files -f %{name}.lang
#
%find_lang	@RPMCONFIGDIR@/find-lang

# Commands + opts to use for retrieving remote files
# Proxy opts can be set through --httpproxy/--httpport popt aliases,
# for any special local needs use %__urlhelper_localopts in system-wide
# or per-user macro configuration.
%__urlhelpercmd         @__CURL@
%__urlhelperopts        --silent --show-error --fail --globoff --location -o
%__urlhelper_proxyopts   %{?_httpproxy:--proxy %{_httpproxy}%{?_httpport::%{_httpport}}}%{!?_httpproxy:%{nil}}
%_urlhelper             %{__urlhelpercmd} %{?__urlhelper_localopts} %{?__urlhelper_proxyopts} %{__urlhelperopts}

# Transaction plugin macros
%__plugindir		%{_libdir}/rpm-plugins
%__transaction_systemd_inhibit	%{__plugindir}/systemd_inhibit.so
%__transaction_selinux		%{__plugindir}/selinux.so
%__transaction_syslog		%{__plugindir}/syslog.so
%__transaction_ima		%{__plugindir}/ima.so
%__transaction_hdrcache		%{__plugindir}/hdrcache.so

# \endverbatim
#*/
